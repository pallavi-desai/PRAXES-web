{"version":3,"sources":["Components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","options","cars","filteredCars","a","Axios","get","then","res","data","filter","Boolean","map","d","value","label","setState","brand","model","e","length","filterValue","x","this","el","i","className","onChange","handleChange","bind","isMulti","tup","index","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAkGeA,E,kDA3Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAK,GACLC,aAAa,IALE,E,4FASnB,iCAAAC,EAAA,sDACEC,IAAMC,IACJ,8DACAC,MAAK,SAACC,GACN,IACMP,EADSO,EAAIC,KACIC,OAAOC,SAASC,KAAI,SAACC,GAAD,MAAQ,CACjDC,MAAOD,EACPE,MAAOF,MAET,EAAKG,SAAS,CAAEf,eAGlBI,IAAMC,IACF,4DACAC,MAAK,SAACC,GACN,IACMN,EADIM,EAAIC,KACCC,OAAOC,SAASC,KAAI,SAACC,GAAD,MAAQ,CACvCI,MAAOJ,EAAEI,MACTC,MAAOL,EAAEK,UAEb,EAAKF,SAAS,CAAEd,SAChB,EAAKc,SAAS,CACVb,aAAaD,OAtBvB,2C,gFA2BA,SAAaiB,GACX,GAAGA,EAAEC,OAAO,EAAE,CACV,IAAIC,EAAcF,EAAEP,KAAI,SAAAU,GAAC,OAAIA,EAAER,SAC3BX,EAAeoB,KAAKvB,MAAME,KAAKQ,QAAO,SAAUc,GAChD,IAAI,IAAIC,EAAE,EAAEA,EAAEJ,EAAYD,OAAOK,IAC7B,GAAGJ,EAAYI,KAAKD,EAAGP,MACnB,OAAO,KAInBM,KAAKP,SAAS,CAAEb,sBAEhBoB,KAAKP,SAAS,CAAEb,aAAcoB,KAAKvB,MAAME,S,oBAK/C,WACE,OACI,sBAAKwB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CACEzB,QAASsB,KAAKvB,MAAMC,QACpB0B,SAAUJ,KAAKK,aAAaC,KAAKN,MACjCO,SAAO,MAGX,qBAAKJ,UAAU,WAAf,SACA,wBAAOA,UAAU,OAAjB,UACI,gCACE,+BACE,qCACA,gDAGJ,gCAEIH,KAAKvB,MAAMG,aAAaS,KAAI,SAACmB,EAAKC,GAChC,OACI,+BACI,6BAAKA,EAAM,IACX,6BAAKD,EAAIb,4B,GA/EhBe,aCKNC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCMSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f18fa1bf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport \"../CSS/Cars.css\";\r\nimport \"../CSS/Search.css\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      cars:[],\r\n      filteredCars:[]\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    Axios.get(\r\n      \"https://praxesdemo-default-rtdb.firebaseio.com/brands.json\"\r\n    ).then((res) => {\r\n      const brands = res.data;\r\n      const options = brands.filter(Boolean).map((d) => ({\r\n        value: d,\r\n        label: d,\r\n      }));\r\n      this.setState({ options });\r\n    });\r\n\r\n    Axios.get(\r\n        \"https://praxesdemo-default-rtdb.firebaseio.com/cars.json\"\r\n      ).then((res) => {\r\n        const c = res.data;\r\n        const cars = c.filter(Boolean).map((d) => ({\r\n            brand: d.brand,\r\n            model: d.model,\r\n          }));\r\n        this.setState({ cars });\r\n        this.setState({\r\n            filteredCars:cars\r\n        })\r\n      });\r\n  }\r\n\r\n  handleChange(e) {\r\n    if(e.length>0){\r\n        let filterValue = e.map(x => x.value);\r\n        let filteredCars = this.state.cars.filter(function (el) {\r\n            for(var i=0;i<filterValue.length;i++){\r\n                if(filterValue[i]===el.brand){\r\n                    return true;\r\n                }\r\n            }\r\n          });\r\n        this.setState({ filteredCars });\r\n    } else{\r\n        this.setState({ filteredCars: this.state.cars });\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"mainDiv\">\r\n          <h2 className=\"title\">Choose brand</h2>\r\n          <div className=\"searchDiv\">\r\n            <Select\r\n              options={this.state.options}\r\n              onChange={this.handleChange.bind(this)}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"tableDiv\">\r\n          <table className=\"cars\">\r\n              <thead>\r\n                <tr>\r\n                  <th>No.</th>\r\n                  <th>Car model</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {\r\n                  this.state.filteredCars.map((tup, index) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{index+1}</td>\r\n                            <td>{tup.model}</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n              }\r\n              </tbody>\r\n          </table>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import './App.css';\nimport Search from './Components/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search></Search>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}